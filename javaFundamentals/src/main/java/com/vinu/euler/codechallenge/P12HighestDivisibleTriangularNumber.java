/**
 * 
 */
package com.vinu.euler.codechallenge;

import java.util.*;

/**
 * @author Vinu Prabhakaran
 *         on Aug 23, 2021
 *
 */
/*The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?*/
public class P12HighestDivisibleTriangularNumber {
	public static void main(String[] args) {
		//System.out.println("7th Triangular Num :"+generateNthTriangularNumber(5000));
		//System.out.println("Factors of 28 :"+getFactorsNumber(76576500));
		long num=1;
		long startTime=System.currentTimeMillis();
		while(true) {
			if(getFactorsNumber(generateNthTriangularNumber(num)).size() > 500) {
				break;
			}
			num++;
		}
		System.out.println("Answer is "+generateNthTriangularNumber(num));
		long ms=System.currentTimeMillis() - startTime;
		System.out.println("Time taken :"+ms/(1000*60)+" mins"+(ms%(1000*60))/1000 +" seconds");
	}
	
	public static long generateNthTriangularNumber(long n) {
		
		long num=0;
		/*for (int i=1;i<=n;i++) {
			num+=i;
		}*/
		num=n*(n+1)/2;
		System.out.println(n+"th number is "+num);
		return num;

	}
	
	public static List<Long> getFactorsNumber(long num) {
		
		List<Long> factors=new ArrayList<>();
		for (long i=1;i<=num/2;i++) {
			if(num %i == 0) {
				factors.add(i);
			}
		}
		factors.add(num);
		System.out.println("Size :"+factors.size());
		return factors;
	}
}
